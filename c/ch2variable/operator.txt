operator.txt

一 简单操作符
1. 单目算数操作符:
单目操作符正负号:+/-
正号+对单目操作数没有影响,可以省略,主要起强调作用
负号可以改变数字的正负号

int a = - 1;
printf("%d\n", a);
printf("%d\n", +a);
int a = -1;
int b = 2;
printf("%d\n", -a);
printf("%d\n", -b);


2. 单目++/--操作符:

(1)前置++和后置++的联系与区别
联系:
前置++和后置++都是自增1
区别:
前置++: 先++再使用 ,   后置++: 先使用再++
(2)前置--和后置--的用法与上同

3. 双目% 取模运算符: 
(1)只能用于<整数>运算 返回结果为两整数的余数
例:  5%2=1
(2)取模的结果正负由左操作数决定

4. 双目 / 除号运算符:
C语言除法和现实中的区别:   
如果除数两端为整数,则执行整数除法,只取商,不留余数,结果整数
如果要计算出小数的效果,除号两端至少要一个小数,全是小数也可以

5. 强制转换:
括号里面放个类型  类似:  (int) 可以把强转标识符后面的类容转为目标类型

6. 双目赋值语句:
赋值语句从右向左运行
赋值语句的结果为左值
<连续>赋值语句从右向左运行



二 复合操作符

1.
<复合>赋值符
C语言中 如果左操作数 在右操作区间有左操作数的操作
则在可以使用复合操作符;

例子:
	a=a+3 ;  也可写作  a+=3  +=即是复合操作符
除了加减乘除模,还有<位>操作符也可以进行复合:>>= <<= ^= |= &=


